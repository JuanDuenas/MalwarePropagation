/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package co.edu.uptc.Logic;
import co.edu.uptc.Model.Device;
import org.graphstream.algorithm.Dijkstra;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.view.Viewer;
/**
 *
 * @author juanp
 */
public class NetworkHandling {
     
    public Device generateAttributes(String name, String type, boolean firewall,boolean WPA, boolean SSL) {
       int speed = (int) (Math.random() * 1000);
       Device dev = new Device(name, type, firewall, WPA, SSL, speed);
       return dev;
    }
    
    public double calculateWeight(String malwareType, Device a){
        double aWeight = 0;
        
        if(malwareType.equals("fastConnection")) {
            if(!a.isSSL()){
                aWeight ++;
            }
            if(!a.isFirewallUpdated()){
                aWeight ++;
            }
            if(!a.isWPA3()){
                aWeight ++;
            }
            if(a.getType().equals("Server")){
                aWeight = aWeight + 2;
            }
            if(a.getType().equals("Router")){
                aWeight = aWeight + 1.5;
            }
            if(a.getConnectionSpeed() > 0 && a.getConnectionSpeed() < 10){
                aWeight = aWeight + 0.5;
            } else if (a.getConnectionSpeed() > 10 && a.getConnectionSpeed() < 100){
                aWeight ++;
            } else if (a.getConnectionSpeed() < 100) {
                aWeight = aWeight + (a.getConnectionSpeed() / 100) + 2;
            }  
        }
        if(malwareType.equals("insecureConnection")) {
            if(!a.isSSL()){
                aWeight = aWeight + 2;
            }
            if(!a.isFirewallUpdated()){
                aWeight = aWeight + 2;
            }
            if(!a.isWPA3()){
                aWeight = aWeight + 2;
            }
            if(a.getType().equals("Server")){
                aWeight = aWeight + 2;
            }
            if(a.getType().equals("Router")){
                aWeight = aWeight + 1.5;
            }
            if(a.getConnectionSpeed() > 0 && a.getConnectionSpeed() < 10){
                aWeight = aWeight + 0.1;
            } else if (a.getConnectionSpeed() > 10 && a.getConnectionSpeed() < 100){
                aWeight = aWeight + 0.5;
            } else if (a.getConnectionSpeed() < 100) {
                aWeight = aWeight + (a.getConnectionSpeed() / 100);
            }
        }
        if(malwareType.equals("firewallEvasion")) {
             if(!a.isSSL()){
                aWeight ++;
            }
            if(!a.isFirewallUpdated()){
                aWeight = aWeight + 10;
            }
            if(!a.isWPA3()){
                aWeight ++;
            }
            if(a.getType().equals("Server")){
                aWeight = aWeight + 2;
            }
            if(a.getType().equals("Router")){
                aWeight = aWeight + 1.5;
            }
            if(a.getConnectionSpeed() > 0 && a.getConnectionSpeed() < 10){
                aWeight = aWeight + 0.1;
            } else if (a.getConnectionSpeed() > 10 && a.getConnectionSpeed() < 100){
                aWeight = aWeight + 0.5;
            } else if (a.getConnectionSpeed() < 100) {
                aWeight = aWeight + (a.getConnectionSpeed() / 100);
            }
        }
        
        return aWeight;
    }
     
     
}
